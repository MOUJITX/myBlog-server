name: MyBlog server build

on:
  push:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Create application-prod.properties
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > application-prod.properties
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> application-prod.properties
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> application-prod.properties
          echo "OSS_ACCESS_KEY=${{ secrets.OSS_ACCESS_KEY }}" >> application-prod.properties
          echo "OSS_SECRET_KEY=${{ secrets.OSS_SECRET_KEY }}" >> application-prod.properties
          echo "OSS_BUCKET=${{ secrets.OSS_BUCKET }}" >> application-prod.properties
          echo "OSS_URL=${{ secrets.OSS_URL }}" >> application-prod.properties
          echo "OSS_FOLDER=${{ secrets.OSS_FOLDER }}" >> application-prod.properties

      - name: Print application-prod.properties
        run: cat application-prod.properties

      - name: Build with Maven
        run: mvn clean package -P prod

      - name: Upload to server
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: 'root'
          server: '${{ secrets.REMOTE_HOST }}'
          ssh_private_key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          local_path: './target/server-2.7.16-SNAPSHOT.jar'
          remote_path: ${{ secrets.REMOTE_PATH }}
          last_ssh: |
            ls ${{ secrets.REMOTE_PATH }}

      # - name: copy jar
      #   uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      #   with:
      #     host: ${{ secrets.HOST }}
      #     user: ${{ secrets.USERNAME }}
      #     pass: ${{ secrets.PASSWORD }}
      #     port: 22
      #     scp: |
      #       ./target/springboot.jar => /home/
      #     last_ssh: |
      #       JAR_NAME="springboot.jar"; PID=$(ps aux | grep "$JAR_NAME" | grep -v grep | awk '{print $2}'); if [ -n "$PID" ]; then kill -9 $PID && echo "进程 $PID 已被杀死"; else echo "未找到与 $JAR_NAME 相关的进程"; fi
      #       /usr/bin/java -jar -Xmx1024M -Xms256M  /home/springboot.jar &
